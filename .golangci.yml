#
# Copyright 2022 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
run:
  concurrency: 6
  deadline: 5m
issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - execinquery
    - goconst
    - gocritic
    - gocyclo
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - loggercheck
    - makezero
    - misspell
    - nakedret
    - nolintlint
    - nosprintfhostport
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - staticcheck
    - stylecheck
    - tenv
    - testableexamples
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace
linters-settings:
  godox:
    keywords:
      - BUG
      - FIXME
      - HACK
  errcheck:
    check-type-assertions: true
    check-blank: true
  gocritic:
    enabled-checks:
      # Diagnostic
      - appendAssign
      - argOrder
      - badCall
      - badCond
      - badLock
      - badRegexp
      - builtinShadowDecl
      - caseOrder
      - codegenComment
      - commentedOutCode
      - deferInLoop
      - deprecatedComment
      - dupArg
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - emptyDecl
      - evalOrder
      - exitAfterDefer
      - externalErrorReassign
      - filepathJoin
      - flagDeref
      - flagName
      - mapKey
      - nilValReturn
      - offBy1
      - regexpPattern
      - returnAfterHttpError
      - sloppyReassign
      - sloppyTypeAssert
      - sortSlice
      - sprintfQuotedString
      - sqlQuery
      - syncMapLoadAndDelete
      - truncateCmp
      - unnecessaryDefer
      - weakCond

      # Performance
      - appendCombine
      - equalFold
      - hugeParam
      - indexAlloc
      - preferDecodeRune
      - preferFprint
      - preferStringWriter
      - preferWriteByte
      - rangeExprCopy
      - rangeValCopy
      - sliceClear
      - stringXbytes

      # Style
      - assignOp
      - boolExprSimplify
      - captLocal
      - commentFormatting
      - commentedOutImport
      - defaultCaseOrder
      - deferUnlambda
      - docStub
      - dupImport
      - elseif
      - emptyFallthrough
      - emptyStringTest
      - exposedSyncMutex
      - hexLiteral
      - httpNoBody
      - ifElseChain
      - ioutilDeprecated
      - methodExprCall
      - newDeref
      - octalLiteral
      - preferFilepathJoin
      - redundantSprint
      - regexpMust
      - regexpSimplify
      - ruleguard
      - singleCaseSwitch
      - sloppyLen
      - stringConcatSimplify
      - switchTrue
      - timeExprSimplify
      - tooManyResultsChecker
      - typeAssertChain
      - typeDefFirst
      - typeSwitchVar
      - underef
      - unlabelStmt
      - unlambda
      - unslice
      - valSwap
      - whyNoLint
      - wrapperFunc
      - yodaStyleExpr

      # Opinionated
      - builtinShadow
      - importShadow
      - initClause
      - nestingReduce
      - paramTypeCombine
      - ptrToRefParam
      - typeUnparen
      - unnamedResult
      - unnecessaryBlock
  nolintlint:
    # Enable to ensure that nolint directives are all used. Default is true.
    allow-unused: false
    # Enable to require nolint directives to mention the specific linter being suppressed. Default is false.
    require-specific: true
